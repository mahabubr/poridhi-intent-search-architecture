version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - app_network
    restart: unless-stopped

  airflow-init:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/postgres
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    command: >
      bash -c "
        pip install psycopg2-binary &&
        airflow db init &&
        airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email airflow@example.com
      "
    networks:
      - app_network

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-webserver
    restart: always
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/postgres
      AIRFLOW__WEBSERVER__RBAC: "True"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - airflow-init
    command: >
      bash -c "
        pip install psycopg2-binary &&
        airflow webserver
      "
    networks:
      - app_network

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-scheduler
    restart: always
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/postgres
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - airflow-init
    command: >
      bash -c "
        pip install psycopg2-binary &&
        airflow scheduler
      "
    networks:
      - app_network

volumes:
  postgres_data:
  qdrant_storage:

networks:
  app_network:
    driver: bridge